apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "netbox.fullname" . }}-backup-borgmatic
  {{- with .Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
{{ include "netbox.labels" . | indent 4 }}
spec:
  schedule: {{ .Values.backup.cronSchedule | default "* * * * *" }}
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: "borgmatic"
            image: "{{ .Values.backup.image.name }}:{{ .Values.backup.image.tag }}"
            imagePullPolicy: IfNotPresent
            command: ["/opt/netbox/netbox/borgmatic-start.sh"]
            volumeMounts:
              - name: script
                mountPath: /opt/netbox/netbox/borgmatic-start.sh
                subPath: borgmatic-start.sh
                readOnly: true
              - name: config
                mountPath: /etc/borgmatic.d/config.yaml
                subPath: config.yaml
                readOnly: true
              - name: media
                mountPath: /opt/netbox/netbox/media
                subPath: {{ .Values.persistence.subPath | default "" | quote }}
                readOnly: true
          volumes:
            - name: config
              secret:
                secretName: {{ .Values.backup.existingConfigSecret | default (printf "%s-backup-config" (include "netbox.fullname" .)) }}
                optional: false
            - name: script
              configMap:
                name: {{ include "netbox.fullname" . }}-backup-script
            - name: media
              {{- if .Values.persistence.enabled }}
              persistentVolumeClaim:
                claimName: {{ .Values.persistence.existingClaim | default (printf "%s-media" (include "netbox.fullname" .)) }}
              {{- else }}
              emptyDir: {}
              {{- end }}
          restartPolicy: {{ .Values.backup.restartPolicy }}
          