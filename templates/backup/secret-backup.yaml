{{- if and .Values.backup.enabled (not .Values.backup.existingConfigSecret) }}
{{- $requiredDetachedKey := list "keyfile" "keyfile-blake2" -}}
{{- $requiredPassphrase := list "authenticated" "authenticated-blake2" "repokey" "repokey-blake2" -}}
{{- $allowedEncTypes := concat (list "none") $requiredPassphrase $requiredDetachedKey -}}
{{- $encTypeNotSetMsg := "Encryption type not set!" -}}
{{- $encTypeNotSupMsg := "Unsupported encryption type!" -}}
{{- $encTypeErrFmt := "(.Values.backup.repoEncryptionType) %s Please use one of the following: %s" -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "netbox.fullname" . }}-backup-secret
  {{- with .Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
{{ include "netbox.labels" . | indent 4 }}
data:
  config: {{ include "netbox.backup.config" . | b64enc | quote }}
  allowRepoCreation: {{ .Values.backup.allowRepoCreation | b64enc | quote }}
  {{- if has (required (printf $encTypeErrFmt $encTypeNotSetMsg (join ", " $allowedEncTypes) ) .Values.backup.repoEncryptionType) $allowedEncTypes }}
  repoEncryptionType: {{ .Values.backup.repoEncryptionType | b64enc | quote }}
  {{- else }}
  {{- fail (printf $encTypeErrFmt $encTypeNotSupMsg (join ", " $allowedEncTypes) ) -}}
  {{- end }}
  {{- if .Values.backup.remoteRepos }}
  sshKey: {{ required "(.Values.backup.sshKey) Provide a base64-encoded SSH private key in order to use remote backup repos." .Values.backup.sshKey | quote }}
  {{-   if .Values.backup.sshKnownHosts }}
  sshKnownHosts: {{ include "netbox.backup.knownhosts" . | b64enc | quote }}
  {{-   end }}
  {{- end }}
  {{- if has .Values.backup.repoEncryptionType $requiredDetachedKey }}
  detachedKey: {{ required "detached-key is required" .Values.backup.detachedKey | quote }}
  {{- end }}
  {{- if has .Values.backup.repoEncryptionType $requiredPassphrase}}
  borgPassphrase: {{ required "borgPassphrase is required" .Values.backup.borgPassphrase | b64enc | quote }}
  {{- end }}
{{- end }}
